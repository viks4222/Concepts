C language uses 4 storage classes,

Auto:
 -variables declared inside a function/block are allocated in auto storage class.
 -Scope limited to function/block
 -Can be accessed outside scope using pointers pointing to the same memory location.
 
Extern:
-Variables are defined elsewhere, value can be overwritten/changed in different block as well
-Extern variable is similar to global value which is declared somewhere so to use it elsewhere.
-The main purpose of using extern variables is that they can be accessed between two different files which are part of a large program


Static:
-Static variables have a property of preserving their value even after they are out of their scope.
-static variables preserve the value of their last use in their scope. 
So we can say that they are initialized only once and exist till the termination of the program.


Register:

-have the same functionality as that of the auto variables.The only difference is that the compiler tries 
to store these variables in the register of the microprocessor if a free register is available. 
-This makes the use of register variables to be much faster than that of the variables stored in the memory 
during the runtime of the program. If a free register is not available, these are then stored in the memory only. 
-Usually few variables which are to be accessed very frequently in a program are declared with the register keyword '
-which improves the running time of the program. An important and interesting point to be noted here is that we 
-cannot obtain the address of a register variable using pointers.

